{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anura\\\\Documents\\\\ReactJs\\\\anime\\\\src\\\\SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SignUp() {\n  _s();\n\n  const [user, setUser] = useState({\n    name: \"\",\n    username: \"\",\n    password: \"\"\n  });\n  let name, value;\n\n  const handleinput = e => {\n    console.log(e);\n    name = e.target.name;\n    value = e.target.value;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const PostData = async e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      password\n    } = user;\n    console.log(user);\n    const res = await fetch(\"/Register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    });\n    const rep = await res.json();\n\n    if (rep.status === 201) {\n      console.log(\"heehehehehehe\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Form\",\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Name : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        required: true,\n        value: user.name,\n        onChange: handleinput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Username or Email : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        required: true,\n        value: user.username,\n        onChange: handleinput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" password : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        value: user.password,\n        onChange: handleinput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"submit\",\n        onClick: PostData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(SignUp, \"IR0nubGTn4+2mZmu/rMhdnCO/30=\");\n\n_c = SignUp;\n;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/anura/Documents/ReactJs/anime/src/SignUp.jsx"],"names":["React","useState","SignUp","user","setUser","name","username","password","value","handleinput","e","console","log","target","PostData","preventDefault","email","res","fetch","method","headers","body","JSON","stringify","rep","json","status"],"mappings":"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","sourcesContent":["\r\nimport React,  { useState } from 'react';\r\n\r\nfunction SignUp () {\r\n    const [user, setUser] = useState({ name:\"\", username:\"\", password:\"\"});\r\n    let name , value;\r\n    const handleinput = (e) => {\r\n      console.log(e)\r\n        name = e.target.name;\r\n        value = e.target.value;\r\n        setUser({...user, [name]:value})\r\n    };\r\n\r\n    const PostData = async (e) => {\r\n      e.preventDefault();\r\n      const { name, email, password } = user;\r\n      console.log(user);\r\n      const res = await fetch(\"/Register\", {\r\n        method: \"POST\", \r\n        headers: {\"Content-Type\" : \"application/json\"},\r\n        body: JSON.stringify({ \r\n          name, email, password\r\n        })\r\n      });\r\n      const rep = await res.json();\r\n      if(rep.status === 201)\r\n      {\r\n        console.log(\"heehehehehehe\")\r\n      }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"Form\" method=\"POST\"> \r\n        <h1>Form</h1> \r\n        <label> Name : </label>\r\n        <input type=\"text\" name=\"name\" required value={user.name} onChange={handleinput} ></input>\r\n        <label> Username or Email : </label>\r\n        <input type=\"text\" name=\"username\" required value={user.username} onChange={handleinput}></input>\r\n        <label> password : </label>\r\n        <input type=\"password\" name=\"password\" required value={user.password} onChange={handleinput}></input>\r\n        <input type=\"submit\" className=\"submit\" onClick={PostData}></input>\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}