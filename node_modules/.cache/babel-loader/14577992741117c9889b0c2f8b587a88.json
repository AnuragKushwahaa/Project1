{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anura\\\\Documents\\\\ReactJs\\\\anime\\\\src\\\\Practice\\\\Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TableP = () => {\n  _s();\n\n  const [Matches, setMatches] = useState([1]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"body\", {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          width: \"50%\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              width: \"100%\",\n              children: \"Weekly Finals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: \"Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 21\n            }, this), Matches.map((Matches, index) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                id: index + 1,\n                children: [\"Match \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 36\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(TableP, \"0NWXBJ+ZbhFskZjdBHaPCgqCbcA=\");\n\n_c = TableP;\nexport default TableP;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableP\");","map":{"version":3,"sources":["C:/Users/anura/Documents/ReactJs/anime/src/Practice/Table.jsx"],"names":["React","useState","Table","TableP","Matches","setMatches","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,iBAAtB;;;;AAGA,MAAMC,MAAM,GAAG,MACf;AAAA;;AACI,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAC,CAAD,CAAD,CAAtC;AACA,sBACA;AAAA,2BACA;AAAA,6BACI;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,OAAO,MAAd;AAAe,UAAA,QAAQ,MAAvB;AAAwB,UAAA,KAAK,EAAC,KAA9B;AAAA,kCACI;AAAA,mCACI;AAAI,cAAA,KAAK,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAGOG,OAAO,CAACE,GAAR,CAAY,CAACF,OAAD,EAAUG,KAAV,KAAoB;AAC3B,kCAAO;AAAI,gBAAA,EAAE,EAAEA,KAAK,GAAC,CAAd;AAAA,qCAAwBA,KAAK,GAAC,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,aAFF,CAHP;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADA;AAuBH,CA1BD;;GAAMJ,M;;KAAAA,M;AA4BN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\n\r\nconst TableP = () => \r\n{\r\n    const [Matches, setMatches] = useState([1])\r\n    return(\r\n    <>\r\n    <div>\r\n        <body>\r\n            <Table striped bordered width='50%'>\r\n                <thead>\r\n                    <tr width='100%'>\r\n                        Weekly Finals\r\n                    </tr>\r\n                </thead>\r\n                <thead>\r\n                    <tr>Team</tr>\r\n                    {\r\n                       Matches.map((Matches, index) => {\r\n                            return <tr id={index+1}>Match {index+1}</tr>  \r\n                        }  )\r\n                    }\r\n                </thead>\r\n            </Table>\r\n        </body>\r\n    </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default TableP;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}